imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@AppBundle/Resources/config/services.yml" }
    - { resource: "@ApplicationSonataUserBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    pharmacies_images: '%kernel.root_dir%/web/uploads/pharmacies'


framework:
    #esi: ~
    translator: { fallbacks: ['fr'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id: ~
    fragments: ~
    http_method_override: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes:
        - 'SonataCoreBundle:Form:datepicker.html.twig'
# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.root_dir%/data/data.db3'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        entity_managers:
            default:
                auto_mapping: true
                mappings:
                    ApplicationSonataUserBundle: ~
                    SonataUserBundle: ~
                    FOSUserBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }
vich_uploader:
    db_driver: orm
    mappings:
        pharmacie_image:
            uri_prefix:         /uploads/pharmacies
            upload_destination: %kernel.root_dir%/../web/uploads/pharmacies
            namer:
                service: vich_uploader.namer_hash
sonata_block:
    default_contexts: [cms]
    blocks:
        # enable the SonataAdminBundle block
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.text: # used to if you plan to use Sonata user routes
        sonata.admin.block.admin_list:
            contexts: [admin]
sonata_admin:
    title: Administration
    dashboard:
        groups:
            customer:
                label: Consommateurs
                items:
                    - admin.customer
                    - admin.age_enfant
                    - admin.theme
            user:
                label: Utilisateurs
                items:
                    - application_sonata_user.admin.user
            pharmacie:
                label:  Pharmacies
                items:
                    - admin.pharmacie
                    - admin.pharmaciegroupe
            Qcm:
                label: Qcm
                items:
                    - admin.qcm
                    - admin.question
            Tablettes:
                label: Tablettes
                items:
                    - admin.tablette

fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User


    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager
    profile:
        # Authentication Form
        form:
            type:               fos_user_profile
            handler:            fos_user.profile.form.handler.default
            name:               fos_user_profile_form
            validation_groups:  [Authentication]
    service:
        user_manager: sonata.user.orm.user_manager

sonata_user:
    security_acl: true
    manager_type: orm # can be orm or mongodb
    impersonating:
        route:                page_slug
        parameters:           { path: / }
    class:                  # Entity Classes
        user:               Application\Sonata\UserBundle\Entity\User
        group:              Application\Sonata\UserBundle\Entity\Group
    admin:
        user:
            class: Application\Sonata\UserBundle\Admin\UserAdmin
    profile:
        default_avatar: 'bundles/sonatauser/default_avatar.png' # Default avatar displayed if user doesn't have one
        # As in SonataAdminBundle's dashboard
        dashboard:
            groups:

                # Prototype
                id:
                    label:                ~
                    label_catalogue:      ~
                    items:                []
                    item_adds:            []
                    roles:                []
            blocks:
                type:                 ~
        register:
            # You may customize the registration forms over here
            form:
                type:                 sonata_user_registration
                handler:              sonata.user.registration.form.handler.default
                name:                 sonata_user_registration_form
                validation_groups:

                    # Defaults:
                    - Registration
                    - Default
            # This allows you to specify where you want your user redirected once he activated his account
            confirm:
                redirect:
                    # Set it to false to disable redirection
                    route: 'sonata_user_profile_show'
                    route_parameters: ~

        # Customize user portal menu by setting links
        menu:
            -
                route: 'sonata_user_profile_edit'
                label: 'link_edit_profile'
                domain: 'SonataUserBundle'
            -
                route: 'sonata_user_profile_edit_authentication'
                label: 'link_edit_authentication'
                domain: 'SonataUserBundle'

        # Profile Form (firstname, lastname, etc ...)
        form:
            type:               sonata_user_profile
            handler:            sonata.user.profile.form.handler.default
            name:               sonata_user_profile_form
            validation_groups:  [Profile]
